TODOS:

# PRIORITY

## Daily Scheduler
- Run at a specified time, like 17:00 today. v
- Run hourly. If this succeeds, then scheduler is complete. v
- Run everyday at a specified time, 00:05. v hehe

## Issues
- Apparently, order insertion failed.
- Case if day 1 - 16: configured but has bugs:
    - WRONG: 251001UNE0Y736 (ordered on 23:58 Sept 30th 2025) SHOULD BE the last order on the table (whole September)
    - yet it includes 251001VD65B1G0 (ordered on 07:03 Oct 1st 2025)
    - CORRECT: Earliest order created is 250901AE5EY3DY on 00:00 Sept 1st 2025

- Case if day 17 - 30/31 is done-ish. v
- Case day 1: October 1st should check if it actually obtains 1 - 30 September orders data.

## Data to Merge
- Fetch orders from get_order_list v
- Merge orders to eileen_grace_orders_log v
- Fetch orders with details from get_order_detail v
- Merge orders with details to eileen_grace_order_detail v

## Deployment
- GCP: Cloud Run, Cloud Scheduler, and Memorystore for Redis.

# Scaling up
- Replicate the same authorization thing for other brands.
- Shopee: might need more App for each brand.
- Backend: should scale to accommodate 16 brands

# AUTHORIZATION
- Authorization is, gratefully, valid for 365 days hehe.
- Access token is invalid after 4 hours. How to get a new one? v
- Refresh token is invalid after 30 days. How to get a new one? v

# Stacks
- Express
- BullMQ
- Redis local on Docker, later Memorystore on GCP
- Shopee API & BigQuery API
- GCP: Cloud Run, Cloud Scheduler, Memorystore.

# API
- Get order list v
- Get order detail: REQUIRE customer detail, address, product bought, order value, etc. 
Current order detail lacks details. v
- Run the Get order list & Get order detail DAILY (see How Orders Are Fetched)
- Process the data according to BigQuery data structure
- Merge / Write to BigQuery
    - require table Order List Status Changes Log
        - order_sn
        - status
        - updated_at
    if status changed, REPLACE previous order_sn with the latest order_sn,
    so eileen_grace_orders_log should include UNIQUE order_sn with latest status.
    - require table Order Detail List
        - order_sn

# How Orders Are Fetched
- On the first day of the month, the whole previous month's orders are fetched.
- On October 1st, orders from 1 - 30 Sept are fetched.
- The equation: firstDayOfTheMonth until currentDay - 1 (yesterday)


# Reliability
- DATA MATCHED. Check if order data matches that of Shopee's. (try comparing first & last order) v
    - Order is not sorted by datetime
    - Earliest order fetched has id 250901AE5EY3DY and IS timely correct. v
    - Latest order fetched has id 250924A236C19G and IS timely correct. v
- Auto-retrying operations if network is bad or fails the first time.