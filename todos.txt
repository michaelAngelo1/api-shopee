TODOS:

# PRIORITY

## Order Status Change Log
- Create table Order Status Change Log v
- Load today's data to the table Order Status Change Log
- Merge orders with order_status change to Order Status Change Log
- Repeat daily

## Daily Scheduler
- Fetch orders from get_order_list 
- Merge orders to eileen_grace_orders
- Merge orders with order_status change to eileen_grace_orders_log
- Fetch orders with details from get_order_detail
- Merge orders with details to eileen_grace_order_detail

## Deployment
- Vercel?
- VPS?

# AUTHORIZATION
- Authorization is, gratefully, valid for 365 days hehe.
- Access token is invalid after 4 hours. How to get a new one? v
- Refresh token is invalid after 30 days. How to get a new one? v

# API
- Get order list v
- Get order detail: REQUIRE customer detail, address, product bought, order value, etc. 
Current order detail lacks details. v
- Run the Get order list & Get order detail DAILY (see How Orders Are Fetched)
- Process the data according to BigQuery data structure
- Merge / Write to BigQuery
    - require table Order List
        - order_sn
        - status
        - created_at
    - require table Order List Status Changes Log
        - order_sn
        - status
        - updated_at
    if status changed, REPLACE previous order_sn with the latest order_sn,
    so eileen_grace_orders_log should include UNIQUE order_sn with latest status.
    - require table Order Detail List
        - order_sn

# To think about
- How to only fetch and merge orders with a status change, 
not fetch all orders DAILY regardless status change exists or not.
- Apparently this needs a staging table so we can perform an UPSERT / MERGE

# How Orders Are Fetched
- On the first day of the month, the whole previous month's orders are fetched.
    - On October 1st, orders from 1 - 30 Sept are fetched.
- The equation: firstDayOfTheMonth until currentDay - 1 (yesterday)

# Scaling up
- Replicate the same thing for other brands.
- Shopee: might need more App for each brand.
- Backend: should scale to accommodate 16 brands

# Reliability
- DATA MATCHED. Check if order data matches that of Shopee's. (try comparing first & last order) v
    - Order is not sorted by datetime
    - Earliest order fetched has id 250901AE5EY3DY and IS timely correct. v
    - Latest order fetched has id 250924A236C19G and IS timely correct. v
- Auto-retrying operations if network is bad or fails the first time.

# Notes
- time_from and time_to on v2.order.get_order_list spans at maximum 15 days,
should think of the workaround

Should make two requests if date of the month is > 17. 

Workaround:
Multiple requests. Check the month and year first.
If 30-day month, make two 15-day request.
Else if 31-day month, make two 15-day request and one 1-day request.
Else if 28-day or 29-day month, make a 15-day request and 13 or 14-day request.

- page_size: the number of orders fetched are limited at 100 per request, 
should think of the workaround

Using response parameters "more" and "next_cursor" to make multiple requests until it is done. v